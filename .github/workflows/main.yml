name: Litmus-CI
on:
  issue_comment:
    types: [created, edited]

jobs:
  tests:
    if: contains(github.event.comment.html_url, '/pull/') && startsWith(github.event.comment.body, '/run-e2e')
    runs-on: ubuntu-latest
    steps:

      - name: Notification for e2e Start
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: "${{ github.event.comment.id }}"
          body: |
            <br>
            **Test Status:** The e2e test has been started please wait for the test result ...      

      #Using the last commit id of pull request
      - uses: octokit/request-action@v2.x
        id: get_PR_commits
        with:
          route: GET /repos/:repo/pulls/:pull_number/commits
          repo: ${{ github.repository }}
          pull_number: ${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: set commit to output
        id: getcommit
        run: | 
           prsha=$(echo $response | jq '.[-1].sha'  | tr -d '"')
           echo "::set-output name=sha::$prsha" 
        env: 
          response:  ${{ steps.get_PR_commits.outputs.data }}
          
      - uses: actions/checkout@v2
        with:
          ref: ${{steps.getcommit.outputs.sha}}      

      - name: Publish to Docker Repository
        run: |
          sudo docker build -f build/ansible-runner/Dockerfile -t uditgaurav/3298r5972u:v1 .
          sudo docker images

      #Install and configure a kind cluster
      - name: Installing Prerequisites (KinD Cluster)
        uses: engineerd/setup-kind@v0.4.0
        with:
            version: "v0.7.0"      

      - name: Installing Testing
        run: |
          kubectl cluster-info --context kind-kind
          kind get kubeconfig --internal >$HOME/.kube/config
          kubectl get nodes

      - name: Load image on the nodes of the cluster
        run: |
          kubectl get nodes   
          kind load --loglevel trace docker-image uditgaurav/3298r5972u:v1

      - name: Deploy an application to be used under chaos
        run: |
          kubectl apply -f https://raw.githubusercontent.com/mayadata-io/chaos-ci-lib/master/app/nginx.yml
          sleep 30

      - name: Setting up kubeconfig ENV for Github Chaos Action
        run: echo ::set-env name=KUBE_CONFIG_DATA::$(base64 -w 0 ~/.kube/config)

      - name: Running Litmus pod delete chaos experiment
        if: startsWith(github.event.comment.body, '/run-e2e-pod-delete') || startsWith(github.event.comment.body, '/run-e2e-all')
        uses: uditgaurav/kubernetes-chaos@master
        env:
          INSTALL_LITMUS: true
          EXPERIMENT_NAME: pod-delete
          EXPERIMENT_IMAGE: uditgaurav/3298r5972u
          EXPERIMENT_IMAGE_TAG: v1
          IMAGE_PULL_POLICY: IfNotPresent
          LITMUS_CLEANUP: true

      - name: Deleting KinD cluster
        if: ${{ always() }}
        run: kind delete cluster


      # - name: Running container kill chaos experiment
      #   if: startsWith(github.event.comment.body, '/run-e2e-container-kill')
      #   uses: mayadata-io/github-chaos-actions@v0.1.0
      #   env:
      #     INSTALL_LITMUS: true
      #     EXPERIMENT_NAME: container-kill
      #     EXPERIMENT_IMAGE: uditgaurav/docker-build:v1.1.0
      #     LITMUS_CLEANUP: true

      # - name: Running node-cpu-hog chaos experiment
      #   if: startsWith(github.event.comment.body, '/run-e2e-node-cpu-hog')
      #   uses: mayadata-io/github-chaos-actions@v0.1.0
      #   env:
      #     INSTALL_LITMUS: true
      #     EXPERIMENT_NAME: node-cpu-hog
      #     EXPERIMENT_IMAGE: uditgaurav/docker-build:v1.1.0     
      #     LITMUS_CLEANUP: true

      # - name: Running node-memory-hog chaos experiment
      #   if: startsWith(github.event.comment.body, '/run-e2e-node-memory-hog')
      #   uses: mayadata-io/github-chaos-actions@v0.1.0
      #   env:
      #     INSTALL_LITMUS: true
      #     EXPERIMENT_NAME: node-memory-hog
      #     EXPERIMENT_IMAGE: uditgaurav/docker-build:v1.1.0     
      #     LITMUS_CLEANUP: true

      # - name: Running pod-cpu-hog chaos experiment
      #   if: startsWith(github.event.comment.body, '/run-e2e-pod-cpu-hog')
      #   uses: mayadata-io/github-chaos-actions@v0.1.0
      #   env:
      #     INSTALL_LITMUS: true
      #     EXPERIMENT_NAME: pod-cpu-hog
      #     EXPERIMENT_IMAGE: uditgaurav/docker-build:v1.1.0     
      #     LITMUS_CLEANUP: true              

      # - name: Running pod-memory-hog chaos experiment
      #   if: startsWith(github.event.comment.body, '/run-e2e-pod-memory-hog')
      #   uses: mayadata-io/github-chaos-actions@v0.1.0
      #   env:
      #     INSTALL_LITMUS: true
      #     EXPERIMENT_NAME: pod-cpu-hog
      #     EXPERIMENT_IMAGE: uditgaurav/docker-build:v1.1.0     
      #     LITMUS_CLEANUP: true
      
      # - name: Running disk-fill chaos experiment
      #   if: startsWith(github.event.comment.body, '/run-e2e-disk-fill')
      #   uses: mayadata-io/github-chaos-actions@v0.1.0
      #   env:
      #     INSTALL_LITMUS: true
      #     EXPERIMENT_NAME: disk-fill
      #     EXPERIMENT_IMAGE: uditgaurav/docker-build:v1.1.0
      #     LITMUS_CLEANUP: true

      # - name: Running pod network corruption chaos experiment
      #   if: startsWith(github.event.comment.body, '/run-e2e-disk-fill')
      #   uses: mayadata-io/github-chaos-actions@v0.1.0
      #   env:
      #     INSTALL_LITMUS: true
      #     EXPERIMENT_NAME: pod-network-corruption
      #     EXPERIMENT_IMAGE: uditgaurav/docker-build:v1.1.0
      #     LITMUS_CLEANUP: true

      # - name: Running pod-network-latency chaos experiment
      #   if: startsWith(github.event.comment.body, '/run-e2e-pod-network-latency')
      #   uses: mayadata-io/github-chaos-actions@v0.1.0
      #   env:
      #     INSTALL_LITMUS: true
      #     EXPERIMENT_NAME: pod-network-latency
      #     EXPERIMENT_IMAGE: uditgaurav/docker-build:v1.1.0
      #     LITMUS_CLEANUP: true 

      # - name: Running pod-network-loss chaos experiment
      #   if: startsWith(github.event.comment.body, '/run-e2e-pod-network-loss')
      #   uses: mayadata-io/github-chaos-actions@v0.1.0
      #   env:
      #     INSTALL_LITMUS: true
      #     EXPERIMENT_NAME: pod-network-loss
      #     EXPERIMENT_IMAGE: uditgaurav/docker-build:v1.1.0
      #     LITMUS_CLEANUP: true

      # - name: Running all tests
      #   if: startsWith(github.event.comment.body, '/run-e2e-all')
      #   run: |
      #     echo "Hello all"          
                   
      - name: Check the test run
        if: |
         startsWith(github.event.comment.body, '/run-e2e-pod-delete') || startsWith(github.event.comment.body, '/run-e2e-container-kill') ||
         startsWith(github.event.comment.body, '/run-e2e-disk-fill') || startsWith(github.event.comment.body, '/run-e2e-node-cpu-hog') ||
         startsWith(github.event.comment.body, '/run-e2e-node-memory-hog') || startsWith(github.event.comment.body, '/run-e2e-pod-cpu-hog') ||
         startsWith(github.event.comment.body, '/run-e2e-pod-memory-hog') || startsWith(github.event.comment.body, '/run-e2e-pod-network-corruption') ||
         startsWith(github.event.comment.body, '/run-e2e-pod-network-latency') || startsWith(github.event.comment.body, '/run-e2e-pod-network-loss') ||
         startsWith(github.event.comment.body, '/run-e2e-all')       
        run: |
          echo ::set-env name=TEST_RUN::true

      - name: Check for all the jobs are succeeded
        if: ${{ success() && env.TEST_RUN == 'true' }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: "${{ github.event.comment.id }}"
          body: |  
            **Test Result:** All tests are passed
          reactions: hooray

      - name: Check for any job failed
        if: ${{ failure() }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: "${{ github.event.comment.id }}"
          body: |
            **Test Failed:** Some tests are failed please check
          reactions: confused

      - name: Check if any test ran or not
        if: env.TEST_RUN != 'true'
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: "${{ github.event.comment.id }}"
          body: |
            **Test Result:** No test found
          reactions: eyes 
