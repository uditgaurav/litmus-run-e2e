---
- block:

    - block:

        - name: "[Event]: Generating an Event for ChaosInjection"
          include_tasks: /utils/common/generate-kubernetes-chaos-events.yml
          vars:
            stage: "ChaosInject"
            exp_pod_name: "{{ chaos_pod_name }}"
            engine_ns: "{{ c_ns }}"
            message: "Injecting {{ c_experiment }} chaos on {{ app_node }} node"
          when: "c_engine is defined and c_engine != ''"    

        - name: "[Inject]: Killing {{ svc_name }} service for {{ c_duration }} seconds"
          shell: >
            timeout 10 kubectl exec {{ ds_pod }} -n {{ a_ns }} 
            -- bash -c "systemctl stop {{ svc_name }} && sleep {{ c_duration }} && systemctl start {{ svc_name }}"

        - name: "[Status]: Waiting for node to get in NotReady"
          shell: |
            kubectl get nodes {{ app_node }} --no-headers -o custom-columns=STATUS:status.conditions[3].status
          args:
            executable: /bin/bash
          register: node_state
          until: node_state.stdout == 'Unknown'
          delay: 2
          retries: 90




        - name: "[Wait]: Wait for the chaos duration of {{ c_duration }}s"
          wait_for:
            timeout: "{{ c_duration }}"

        - name: "[Status]: Checking the node status after chaos"
          shell: |
            kubectl get nodes {{ app_node }} --no-headers -o custom-columns=STATUS:status.conditions[3].status
          args:
            executable: /bin/bash
          register: node_state
          until: node_state.stdout == 'True'
          delay: 2
          retries: 90
        
      when: "svc_name is not defined or (svc_name is defined and svc_name == 'kubelet')"

  when: "ds_pod_name is defined and ds_pod_name != ''"

